{"version":3,"file":"component---src-pages-quant-js-e4c0b6151e5bc7a5700b.js","mappings":"kMAiDA,IAEMA,EAAc,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UA8BlB,OA9BkBD,EACnBE,kBAAA,YACCC,EAAAA,EAAAA,KAAUC,MAAKC,IACdC,QAAQC,IAAIF,GACZG,KAAKC,SAAS,CAAEJ,QAAO,GAEzB,EAACL,EACDU,OAAA,WACC,OAAkB,MAAdF,KAAKG,MACDC,EAAAA,cAAA,WAAK,cAGZA,EAAAA,cAAA,WACCA,EAAAA,cAACC,EAAAA,GAAI,CACJC,GAAI,CACHC,WAAY,sLACZC,SAAU,GACVC,WAAY,OACZC,QAAS,QACT,aAAc,WAEfN,EAAAA,cAAA,UACAA,EAAAA,cAACO,EAAAA,GAAI,CAACC,KAAK,oDAAoD,6CAIhER,EAAAA,cAAA,UACAA,EAAAA,cAACS,EAAAA,EAAK,CAACC,KAAK,MAAMjB,KAAMG,KAAKG,MAAMN,OAGtC,EAACV,CAAA,CA9BkB,CAASiB,EAAAA,WAyC7B,UARcW,IAEZX,EAAAA,cAACjB,EAAc,K","sources":["webpack://gatsby-starter-default/./src/pages/quant.js"],"sourcesContent":["// TradingViewWidget.jsx\nimport React, { useEffect, useRef, memo } from 'react';\n// import { Chart } from 'react-stockcharts';\nimport Chart from '../components/Chart';\nimport { getData } from '../components/utils';\nimport { Text } from 'theme-ui';\nimport { Link } from 'theme-ui'\n\n// https://www.tradingview.com/script/dtMhahYx-Multi-Asset-Correlation-Overlay/\n// https://tradingview-widgets.jorrinkievit.xyz/docs/components/StockMarket\n// https://www.tradingview.com/charting-library-docs/latest/tutorials/implement_datafeed_tutorial/Datafeed-Implementation\n// [o] https://min-api.cryptocompare.com/\n// https://www.tradingview.com/charting-library-docs/latest/tutorials/implement_datafeed_tutorial/Datafeed-Implementation#result \n// https://codepen.io/truong160196/pen/gNBeBN\n// [~] https://www.tradingview.com/charting-library-docs/latest/tutorials/implement_datafeed_tutorial/Widget-Setup\n\n// function TradingViewWidget() {\n//   const container = useRef();\n\n//   useEffect(\n//     () => {\n//       const script = document.createElement(\"script\");\n//       script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-advanced-chart.js\";\n//       script.type = \"text/javascript\";\n//       script.async = true;\n//       script.innerHTML = `\n//         {\n//           \"autosize\": true,\n//           \"symbol\": \"ETH\",\n//           \"interval\": \"D\",\n//           \"timezone\": \"Etc/UTC\",\n//           \"theme\": \"light\",\n//           \"style\": \"1\",\n//           \"locale\": \"en\",\n//           \"enable_publishing\": false,\n//           \"allow_symbol_change\": true,\n//           \"support_host\": \"https://www.tradingview.com\"\n//         }`;\n//       container.current.appendChild(script);\n//     },\n//     []\n//   );\n\n//   return (\n//     <div className=\"tradingview-widget-container\" ref={container} style={{ height: \"100%\", width: \"100%\" }}>\n//       <div className=\"tradingview-widget-container__widget\" style={{ height: \"calc(100% - 32px)\", width: \"100%\" }}></div>\n//       <div className=\"tradingview-widget-copyright\"><a href=\"https://www.tradingview.com/\" rel=\"noopener nofollow\" target=\"_blank\"><span className=\"blue-text\">Track all markets on TradingView</span></a></div>\n//     </div>\n//   );\n// }\n\nclass ChartComponent extends React.Component {\n\tcomponentDidMount() {\n\t\tgetData().then(data => {\n\t\t\tconsole.log(data)\n\t\t\tthis.setState({ data })\n\t\t})\n\t}\n\trender() {\n\t\tif (this.state == null) {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Text\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tfontFamily: 'system-ui,-apple-system,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",\"Liberation Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\"',\n\t\t\t\t\t\tfontSize: 25,\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\t\t'text-align': 'center'\n\t\t\t\t\t}}>\n\t\t\t\t\t<p />\n\t\t\t\t\t<Link href=\"https://gitea.com/1m1ucky/Django-DDD-Lite-Course\" >\n\t\t\t\t\t\tQuant Stock + Cryptocurrency Trading Bot\n\t\t\t\t\t</Link>\n\t\t\t\t</Text>\n\t\t\t\t<p />\n\t\t\t\t<Chart type=\"svg\" data={this.state.data} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst trade = () => {\n\treturn (\n\t\t<ChartComponent />\n\t)\n}\n\n// export default memo(TradingViewWidget);\n// export default (TradingViewWidget);\nexport default trade;"],"names":["ChartComponent","_React$Component","apply","arguments","_inheritsLoose","_proto","prototype","componentDidMount","getData","then","data","console","log","this","setState","render","state","React","Text","sx","fontFamily","fontSize","fontWeight","display","Link","href","Chart","type","trade"],"sourceRoot":""}